{
	"name": "SQL script 13",
	"properties": {
		"content": {
			"query": "/****** Object:  StoredProcedure [QA_Landing].[VALIDATEDATASERIALSONTRANSITPENDING]    Script Date: 11/01/2023 09:36:48 a. m. ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nALTER PROC [QA_Landing].[VALIDATEDATASERIALSONTRANSITPENDING] AS\n\n/******\n\n\n\nAutor: Abraham D. Sánchez bSide\nCreatedDate: 2022-10-12\nModifiedDate: 2022-10-12\nModifiedBy: Abraham D. Sánchez bSide\nDescription: Create SP VALIDATEDATASERIALSONTRANSITPENDING\n\n\n\n******/\n\n    DECLARE @logid AS BIGINT = CONVERT(VARCHAR(15),\n                               FORMAT(Getdate(), 'yyMMddHHmmssmmm'))\n\n    EXEC [DBO].[GEN_SPLOGINSERTS]\n      '04 VALIDATEDATASERIALSONTRANSITPENDING',\n      'Execute insert table VALIDATEDATASERIALSONTRANSITPENDING',\n      @logid\n\n    DECLARE @result        VARCHAR (5000) = '',\n            @code          INT,\n            @state         INT,\n            @message       NVARCHAR(4000),\n            @stacktracetxt INT\n\n  \n  BEGIN TRY\n\n  TRUNCATE TABLE [QA_LANDING].[TMP_STREAM_SERIALS_IN_PENDING]\n\n       INSERT INTO [QA_LANDING].[TMP_STREAM_SERIALS_IN_PENDING]\n                  ([SOURCE_WAREHOUSE],\n                   [DESTINATION_WAREHOUSE],\n                   [DISPATCH],\n                   [SOURCE_TYPE],\n                   [SUBINVENTORY_SUPPLIER],\n                   [SUBINVENTORY_INTERNAL],\n                   [ID],\n                   [EXPIRATION_DATE],\n                   [ORDER_TYPE],\n                   [SKU],\n                   [QUANTITY],\n                   [FILE_NAME],\n                   [CREATE_DATE])\n      (SELECT [ALMACEN_ORIGEN],\n              [ALMACEN_DESTINO],\n              [DESPACHO],\n              [TIPO_ORIGEN],\n              [SUBINVENTARIO_PROVEEDOR],\n              [SUBINVENTARIO_INTERNO],\n              [ARTICULO],\n              [FECHA_VENCIMIENTO],\n              [TIPO_PEDIDO],\n              [PEDIDO],\n              try_convert(numeric(16,0),cast(CANTIDAD as float)) 'CANTIDAD',\n              [QUERY_NAME],\n              [CREATE_DATE]\n       FROM   [QA_LANDING].[SERIESENPENDING])\n\n      DELETE FROM [QA_LANDING].[FALLBACK_REPORT]\n      WHERE  Upper(FILE_NAME) LIKE 'SERIALS_IN_PENDING%'\n\n      INSERT INTO [QA_LANDING].[FALLBACK_REPORT]\n                  ([KEY],\n                   [VALUE],\n                   FILE_NAME,\n                   STOCK_INVENTORY_DATE,\n                   STATUS,\n                   CREATED_DATE,\n                   MODIFIED_DATE)\n      (SELECT DISTINCT 'SKU'       ENTITY,\n                       SSH.ID      NAME,\n                       SSH.FILE_NAME,\n                       CREATE_DATE 'STOCK_INVENTORY_DATE',\n                       0,\n                       [dbo].[ufn_GetLocalDate] (getdate()),\n                       [dbo].[ufn_GetLocalDate] (getdate())\n       FROM   [QA_LANDING].[TMP_STREAM_SERIALS_IN_PENDING] SSH\n              LEFT OUTER JOIN [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n                           ON PT.STOCK_KEEPING_UNIT = Upper(TRIM(SSH.ID))\n       WHERE  PT.STOCK_KEEPING_UNIT IS NULL\n       UNION\n       SELECT DISTINCT 'SALES CHANNEL'      ENTITY,\n                       SSH.SOURCE_WAREHOUSE NAME,\n                       SSH.FILE_NAME,\n                       CREATE_DATE          'STOCK_INVENTORY_DATE',\n                       0,\n                       [dbo].[ufn_GetLocalDate] (getdate()),\n                       [dbo].[ufn_GetLocalDate] (getdate())\n       FROM   [QA_LANDING].[TMP_STREAM_SERIALS_IN_PENDING] SSH\n              LEFT OUTER JOIN [QA_LANDING].[SALESCHANNEL] SC\n                           ON SC.NAME = SSH.SOURCE_WAREHOUSE\n       WHERE  SC.NAME IS NULL\n       UNION\n       SELECT DISTINCT 'SALES CHANNEL'           ENTITY,\n                       SSH.DESTINATION_WAREHOUSE NAME,\n                       SSH.FILE_NAME,\n                       CREATE_DATE               'STOCK_INVENTORY_DATE',\n                       0,\n                       [dbo].[ufn_GetLocalDate] (getdate()),\n                       [dbo].[ufn_GetLocalDate] (getdate())\n       FROM   [QA_LANDING].[TMP_STREAM_SERIALS_IN_PENDING] SSH\n              LEFT OUTER JOIN [QA_LANDING].[SALESCHANNEL] SC\n                           ON SC.NAME = SSH.DESTINATION_WAREHOUSE\n       WHERE  SC.NAME IS NULL)\n\n      INSERT INTO [QA_LANDING].[FALLBACK_REPORT_ARCHIVED]\n      SELECT *\n      FROM   QA_LANDING.FALLBACK_REPORT\n\n      SET @result = 'success' \n      SELECT @result;\n  --COMMIT TRANSACTION\n  END TRY\n\n  BEGIN CATCH\n      --ROLLBACK TRANSACTION\n      SET @result = 'failure'\n      SET @code = (SELECT ERROR_NUMBER())\n      SET @state = (SELECT ERROR_STATE())\n      SET @message = (SELECT ERROR_MESSAGE())\n\t  SET @stackTraceTxt = 0\n\n      TRUNCATE TABLE QA_LANDING.TEMP_ERROR_LOG\n\n      INSERT INTO QA_LANDING.TEMP_ERROR_LOG\n                  (CODE,\n                   STATE,\n                   MESSAGE,\n                   STACKTRACETXT,\n                   STATUS,\n                   TASKNAME)\n      -- VALUES (@code, @state, @message, @stackTraceTxt, @result,'ValidateDataSerialsOnTransitPending')\n      (SELECT @code,\n              @state,\n              @message,\n              @stacktracetxt,\n              @result,\n              'ValidateDataSerialsOnTransitPending')\n\n      INSERT INTO QA_LANDING.ERROR_LOG\n                  (CODE,\n                   STATE,\n                   MESSAGE,\n                   STACKTRACETXT,\n                   STATUS,\n                   TASKNAME,\n                   CREATED_DATE)\n      (SELECT CODE,\n              STATE,\n              MESSAGE,\n              STACKTRACETXT,\n              STATUS,\n              TASKNAME,\n              [dbo].[ufn_GetLocalDate] (getdate())\n       FROM   QA_LANDING.TEMP_ERROR_LOG)\n  END CATCH\n\n    SELECT @result; \n  UPDATE dbo.gen_Logs SET FIN = [dbo].[ufn_GetLocalDate](GETDATE()) WHERE LogID = @logID\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "Landing",
				"poolName": "Landing"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}