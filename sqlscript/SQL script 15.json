{
	"name": "SQL script 15",
	"properties": {
		"content": {
			"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE PROC [QA_Landing].[SP_INVENTORY_SUMMARY_REPORT_OLD] AS\n\n/******\n\n\n\nAutor: Abraham D. Sánchez bSide\nCreatedDate: 2022-10-12\nModifiedDate: 2022-10-12\nModifiedBy: Abraham D. Sánchez bSide\nModifiedDate: 2022-11-08\nModifiedBy:  Diego A. Vázquez\nDescription: Create SP INVENTORY_SUMMARY_REPORT\n\n\n\n******/\n\n    DECLARE @logid AS BIGINT = CONVERT(VARCHAR(15),\n                               FORMAT(Getdate(), 'yyMMddHHmmssmmm'))\n\n    EXEC [DBO].[GEN_SPLOGINSERTS]\n      '09 sp_INVENTORY_SUMMARY_REPORT',\n      'Execute insert table sp_INVENTORY_SUMMARY_REPORT',\n      @logid\n\n    DECLARE @result        VARCHAR (5000) = '',\n            @stock_in_date DATETIME,\n            @code          INT,\n            @state         INT,\n            @message       NVARCHAR(4000),\n            @stacktracetxt INT,\n            @valmaxgpo     INT,\n            @i             INT = 1\n\n  BEGIN TRY\n      TRUNCATE TABLE [DBO].[TMP_DATES]\n\n      --select * from [dbo].[tmp_Dates] \n      INSERT INTO [DBO].[TMP_DATES]\n      SELECT ROW_NUMBER ()\n               OVER(\n                 ORDER BY STOCK_INVENTORY_DATE ASC) AS IdDate,\n             *\n      FROM   (SELECT STOCK_INVENTORY_DATE\n              FROM   (SELECT TASK_NAME,\n                             STOCK_INVENTORY_DATE,\n                             IS_INVENTORY_REPORT_GENERATED,\n                             PROCESS_TYPE\n                  FROM [QA_LANDING].[INVENTORY_STOCK_SUMMARY_REPORT_STATUS]\n                      WHERE  PROCESS_TYPE = 'INVENTORY'\n                             AND IS_INVENTORY_REPORT_GENERATED = 'false') A\n              GROUP  BY STOCK_INVENTORY_DATE\n              HAVING Count(0) = 4) B -- ES = 4\n\n      SELECT @valmaxgpo = Max(IDDATE)\n      FROM   [DBO].[TMP_DATES]\n\n      WHILE @i <= @valmaxgpo\n        BEGIN\n            SELECT @stock_in_date = STOCK_INVENTORY_DATE\n            FROM   [DBO].[TMP_DATES]\n            WHERE  IDDATE = @i\n\n  TRUNCATE TABLE [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT]\n\n  TRUNCATE TABLE\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_ON_HAND]\n\n  TRUNCATE TABLE\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_ACCESORIES]\n\n  TRUNCATE TABLE\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_CHAINS]\n\n  TRUNCATE TABLE\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_B2B]\n\n  TRUNCATE TABLE [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT]\n\n  TRUNCATE TABLE\n  [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT_TRANSIT]\n\n  TRUNCATE TABLE\n  [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT_PENDING]\n  \n \n\n  INSERT INTO [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT]\n              (EQUIPMENT)\n  SELECT DISTINCT BASE_EQUIPMENT\n  FROM   [QA_LANDING].[INVENTORY_HANDSETS_IN_STOCK]\n  WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n         AND DELETE_RECORD = 'NO'\n         AND TOP_CHANNEL <> 'QUITAR'\n  UNION\n  SELECT DISTINCT EQUIPMENT\n  FROM   [QA_LANDING].[INVENTORY_ACCESORIES_IN_STOCK]\n         INNER JOIN [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n                 ON PT.STOCK_KEEPING_UNIT = EQUIPMENT\n  WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n         AND DELETE_RECORD = 'NO'\n         AND TOP_CHANNEL <> 'QUITAR'\n         AND PT.TYPE IN( 'ACCESORIOS', 'IOT', 'ECO' )\n\n  INSERT INTO\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_ON_HAND]\n  SELECT *\n  FROM   (SELECT distinct  BASE_EQUIPMENT,\n                 FAMILY,\n                 QUANTITY_AMOUNT,\n                 TOP_CHANNEL_3,\n                 STOCK_INVENTORY_DATE\n          FROM   [QA_LANDING].[INVENTORY_HANDSETS_IN_STOCK]\n          WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n                 AND TOP_CHANNEL_2 IN( 'DNE', 'DRC', 'FF', 'POS',\n                                       'WH', 'FF EMP', 'LOG INV', 'FED' )\n                 AND DELETE_RECORD = 'NO') A\n         PIVOT(Sum(QUANTITY_AMOUNT)\n              FOR TOP_CHANNEL_3 IN(DNE,\n                                   [WAL-MART],\n                                   ELEKTRA,\n                                   COPPEL,\n                                   LIVERPOOL,\n                                   [OTRAS CADENAS],\n                                   [FF GDL],\n                                   [FF MER],\n                                   [FF MEX],\n                                   [FF MTY],\n                                   [FF TIJ],\n                                   [FF VER],\n                                   [FF EMP],\n                                   [POS],\n                                   [DRC],\n                                   [FED],\n                                   [LOG INV],\n                                   [FF],\n                                   [FF B2B],\n                                   [WH])) AS B\n\n  MERGE INTO [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT] AS T\n  USING (SELECT distinct *\n         FROM\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_ON_HAND])\n        AS\n        S\n  ON S.EQUIPMENT = T.EQUIPMENT\n  WHEN MATCHED THEN\n    UPDATE SET T.EQUIPMENT = S.EQUIPMENT,\n               T.FAMILY = S.FAMILY,\n               T.STOCK_INVENTORY_DATE = S.STOCK_INVENTORY_DATE,\n               T.DNE = S.DNE,\n               T.WALMART = S.WALMART,\n               T.ELEKTRA = S.ELEKTRA,\n               T.COPPEL = S.COPPEL,\n               T.LIVERPOOL = S.LIVERPOOL,\n               T.OTHER_CHAINS = S.OTHER_CHAINS,\n               T.FFGDL = S.FFGDL,\n               T.FFMER = S.FFMER,\n               T.FFMEX = S.FFMEX,\n               T.FFMTY = S.FFMTY,\n               T.FFTIJ = S.FFTIJ,\n               T.FFVER = S.FFVER,\n               T.FFEMP = S.FFEMP,\n               T.POS = S.POS,\n               T.DRC = S.DRC,\n               T.FED = S.FED,\n               T.LOGINV = S.LOGINV,\n               T.FF = S.FF,\n               T.FFB2B = S.FFB2B,\n               T.WH = S.WH\n  WHEN NOT MATCHED THEN\n    INSERT(EQUIPMENT,\n           FAMILY,\n           STOCK_INVENTORY_DATE,\n           DNE,\n           WALMART,\n           ELEKTRA,\n           COPPEL,\n           LIVERPOOL,\n           OTHER_CHAINS,\n           FFGDL,\n           FFMER,\n           FFMEX,\n           FFMTY,\n           FFTIJ,\n           FFVER,\n           FFEMP,\n           POS,\n           DRC,\n           FED,\n           LOGINV,\n           FF,\n           FFB2B,\n           WH )\n    VALUES(S.EQUIPMENT,\n           S.FAMILY,\n           S.STOCK_INVENTORY_DATE,\n           S.DNE,\n           S.WALMART,\n           S.ELEKTRA,\n           S.COPPEL,\n           S.LIVERPOOL,\n           S.OTHER_CHAINS,\n           S.FFGDL,\n           S.FFMER,\n           S.FFMEX,\n           S.FFMTY,\n           S.FFTIJ,\n           S.FFVER,\n           S.FFEMP,\n           S.POS,\n           S.DRC,\n           S.FED,\n           S.LOGINV,\n           S.FF,\n           S.FFB2B,\n           S.WH );\n\n  INSERT INTO\n  [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_ACCESORIES]\n  SELECT DISTINCT *\n  FROM   (SELECT EQUIPMENT,\n                 FAMILY,\n                 QUANTITY_AMOUNT,\n                 TOP_CHANNEL,\n                 STOCK_INVENTORY_DATE\n          FROM   [QA_LANDING].[INVENTORY_ACCESORIES_IN_STOCK]\n                 INNER JOIN\n                 [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n                         ON PT.STOCK_KEEPING_UNIT = EQUIPMENT\n          WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n                 AND TOP_CHANNEL IN( 'POS', 'FF', 'DRC', 'WH',\n                                     'FED', 'LOG INV' )\n                 AND DELETE_RECORD = 'NO'\n                 AND PT.TYPE IN( 'ACCESORIOS', 'IOT', 'ECO' )) C\n         PIVOT(Sum(QUANTITY_AMOUNT)\n              FOR TOP_CHANNEL IN(DNE,\n                                 [WAL-MART],\n                                 ELEKTRA,\n                                 COPPEL,\n                                 LIVERPOOL,\n                                 [OTRAS CADENAS],\n                                 [FF GDL],\n                                 [FF MER],\n                                 [FF MEX],\n                                 [FF MTY],\n                                 [FF TIJ],\n                                 [FF VER],\n                                 [FF EMP],\n                                 POS,\n                                 DRC,\n                                 FED,\n                                 [LOG INV],\n                                 FF,\n                                 [FF B2B],\n                                 WH)) D\n\n  MERGE INTO [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT] AS T\n  USING (SELECT DISTINCT *\n         FROM\n[QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_ACCESORIES])\n      AS S\nON S.EQUIPMENT = T.EQUIPMENT\nWHEN MATCHED THEN\n  UPDATE SET T.EQUIPMENT = S.EQUIPMENT,\n             T.FAMILY = S.FAMILY,\n             T.STOCK_INVENTORY_DATE = S.STOCK_INVENTORY_DATE,\n             T.DNE = S.DNE,\n             T.WALMART = S.WALMART,\n             T.ELEKTRA = S.ELEKTRA,\n             T.COPPEL = S.COPPEL,\n             T.LIVERPOOL = S.LIVERPOOL,\n             T.OTHER_CHAINS = S.OTHER_CHAINS,\n             T.FFGDL = S.FFGDL,\n             T.FFMER = S.FFMER,\n             T.FFMEX = S.FFMEX,\n             T.FFMTY = S.FFMTY,\n             T.FFTIJ = S.FFTIJ,\n             T.FFVER = S.FFVER,\n             T.FFEMP = S.FFEMP,\n             T.POS = S.POS,\n             T.DRC = S.DRC,\n             T.FED = S.FED,\n             T.LOGINV = S.LOGINV,\n             T.FF = S.FF,\n             T.FFB2B = S.FFB2B,\n             T.WH = S.WH\nWHEN NOT MATCHED THEN\n  INSERT(EQUIPMENT,\n         FAMILY,\n         STOCK_INVENTORY_DATE,\n         DNE,\n         WALMART,\n         ELEKTRA,\n         COPPEL,\n         LIVERPOOL,\n         OTHER_CHAINS,\n         FFGDL,\n         FFMER,\n         FFMEX,\n         FFMTY,\n         FFTIJ,\n         FFVER,\n         FFEMP,\n         POS,\n         DRC,\n         FED,\n         LOGINV,\n         FF,\n         FFB2B,\n         WH )\n  VALUES(S.EQUIPMENT,\n         S.FAMILY,\n         S.STOCK_INVENTORY_DATE,\n         S.DNE,\n         S.WALMART,\n         S.ELEKTRA,\n         S.COPPEL,\n         S.LIVERPOOL,\n         S.OTHER_CHAINS,\n         S.FFGDL,\n         S.FFMER,\n         S.FFMEX,\n         S.FFMTY,\n         S.FFTIJ,\n         S.FFVER,\n         S.FFEMP,\n         S.POS,\n         S.DRC,\n         S.FED,\n         S.LOGINV,\n         S.FF,\n         S.FFB2B,\n         S.WH );\n\nINSERT INTO\n[QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_CHAINS]\nSELECT DISTINCT *\nFROM   (SELECT BASE_EQUIPMENT,\n               FAMILY,\n               QUANTITY_AMOUNT,\n               TOP_CHANNEL_3,\n               STOCK_INVENTORY_DATE\n        FROM   [QA_LANDING].[INVENTORY_HANDSETS_IN_STOCK]\n        WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n               AND TOP_CHANNEL_3 IN( 'Wal-Mart', 'Elektra', 'Coppel',\n                                     'Liverpool',\n                                     'Otras Cadenas'\n                                   )\n               AND DELETE_RECORD = 'NO') E\n       PIVOT(Sum(QUANTITY_AMOUNT)\n            FOR TOP_CHANNEL_3 IN(DNE,\n                                 [WAL-MART],\n                                 ELEKTRA,\n                                 COPPEL,\n                                 LIVERPOOL,\n                                 [OTRAS CADENAS],\n                                 [FF GDL],\n                                 [FF MER],\n                                 [FF MEX],\n                                 [FF MTY],\n                                 [FF TIJ],\n                                 [FF VER],\n                                 [FF EMP],\n                                 POS,\n                                 DRC,\n                                 FED,\n                                 [LOG INV],\n                                 FF,\n                                 [FF B2B],\n                                 WH)) F\n\nMERGE INTO [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT] AS T\nUSING (SELECT DISTINCT *\n       FROM\n[QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_CHAINS]) AS S\nON S.EQUIPMENT = T.EQUIPMENT\nWHEN MATCHED THEN\n  UPDATE SET T.FAMILY = S.FAMILY,\n             T.STOCK_INVENTORY_DATE = S.STOCK_INVENTORY_DATE,\n             T.WALMART = S.WALMART,\n             T.ELEKTRA = S.ELEKTRA,\n             T.COPPEL = S.COPPEL,\n             T.LIVERPOOL = S.LIVERPOOL,\n             T.OTHER_CHAINS = S.OTHER_CHAINS\nWHEN NOT MATCHED THEN\n  INSERT(EQUIPMENT,\n         FAMILY,\n         STOCK_INVENTORY_DATE,\n         DNE,\n         WALMART,\n         ELEKTRA,\n         COPPEL,\n         LIVERPOOL,\n         OTHER_CHAINS,\n         FFGDL,\n         FFMER,\n         FFMEX,\n         FFMTY,\n         FFTIJ,\n         FFVER,\n         FFEMP,\n         POS,\n         DRC,\n         FED,\n         LOGINV,\n         FF,\n         FFB2B,\n         WH )\n  VALUES(S.EQUIPMENT,\n         S.FAMILY,\n         S.STOCK_INVENTORY_DATE,\n         S.DNE,\n         S.WALMART,\n         S.ELEKTRA,\n         S.COPPEL,\n         S.LIVERPOOL,\n         S.OTHER_CHAINS,\n         S.FFGDL,\n         S.FFMER,\n         S.FFMEX,\n         S.FFMTY,\n         S.FFTIJ,\n         S.FFVER,\n         S.FFEMP,\n         S.POS,\n         S.DRC,\n         S.FED,\n         S.LOGINV,\n         S.FF,\n         S.FFB2B,\n         S.WH );\n\nINSERT INTO\n[QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_B2B]\nSELECT *\nFROM   (SELECT distinct  BASE_EQUIPMENT,\n               FAMILY,\n               QUANTITY_AMOUNT,\n               TOP_CHANNEL,\n               STOCK_INVENTORY_DATE\n        FROM   [QA_LANDING].[INVENTORY_HANDSETS_IN_STOCK]\n        WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n               AND TOP_CHANNEL IN( 'FF B2B' )\n               AND DELETE_RECORD = 'NO') G\n       PIVOT(Sum(QUANTITY_AMOUNT)\n            FOR TOP_CHANNEL IN(DNE,\n                               [WAL-MART],\n                               ELEKTRA,\n                               COPPEL,\n                               LIVERPOOL,\n                               [OTRAS CADENAS],\n                               [FF GDL],\n                               [FF MER],\n                               [FF MEX],\n                               [FF MTY],\n                               [FF TIJ],\n                               [FF VER],\n                               [FF EMP],\n                               POS,\n                               DRC,\n                               FED,\n                               [LOG INV],\n                               FF,\n                               [FF B2B],\n                               WH)) H\n\nMERGE INTO [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT] AS T\nUSING (SELECT DISTINCT *\n       FROM\n[QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT_HANDSETS_B2B]) AS S\nON S.EQUIPMENT = T.EQUIPMENT\nWHEN MATCHED THEN\n  UPDATE SET T.FFB2B = S.FFB2B,\n             T.FAMILY = S.FAMILY,\n             T.STOCK_INVENTORY_DATE = S.STOCK_INVENTORY_DATE\nWHEN NOT MATCHED THEN\n  INSERT(EQUIPMENT,\n         FAMILY,\n         STOCK_INVENTORY_DATE,\n         DNE,\n         WALMART,\n         ELEKTRA,\n         COPPEL,\n         LIVERPOOL,\n         OTHER_CHAINS,\n         FFGDL,\n         FFMER,\n         FFMEX,\n         FFMTY,\n         FFTIJ,\n         FFVER,\n         FFEMP,\n         POS,\n         DRC,\n         FED,\n         LOGINV,\n         FF,\n         FFB2B,\n         WH )\n  VALUES(S.EQUIPMENT,\n         S.FAMILY,\n         S.STOCK_INVENTORY_DATE,\n         S.DNE,\n         S.WALMART,\n         S.ELEKTRA,\n         S.COPPEL,\n         S.LIVERPOOL,\n         S.OTHER_CHAINS,\n         S.FFGDL,\n         S.FFMER,\n         S.FFMEX,\n         S.FFMTY,\n         S.FFTIJ,\n         S.FFVER,\n         S.FFEMP,\n         S.POS,\n         S.DRC,\n         S.FED,\n         S.LOGINV,\n         S.FF,\n         S.FFB2B,\n         S.WH );\n\nINSERT INTO QA_LANDING.INVENTORY_STOCK_SUMMARY_REPORT\nSELECT PT. OTHER_IDENTIFIER                     SAP,\n       X.EQUIPMENT                              ORACLE,\n       M.NAME                                   OEM,\n       PT.DESCRIPTION                           SYSTEM_DESCRIPTION,\n       PT.MODEL_NUMBER                          FAMILIA,\n       PT.TYPE                                  TYPE,\n       PT.COLOUR                                COLOR,\n       PT.PREPAID_USAGE_STATE                   ESTATUS_PREPAGO,\n       PT.POSTPAID_USAGE_STATE                  ESTATUS_POSPAGO,\n       PT.STATUS,\n       O.NAME                                   OPERADOR,\n       ISNULL(X.FFB2B, 0)                       WH,\n       ISNULL(X.DNE, 0)                         DNE,\n       ISNULL(X.WALMART, 0)                     WALMART,\n       ISNULL(X.ELEKTRA, 0)                     ELEKTRA,\n       ISNULL(X.COPPEL, 0)                      COPPEL,\n       ISNULL(X.LIVERPOOL, 0)                   LIVERPOOL,\n       ISNULL(X.OTHER_CHAINS, 0)                OTHER_CHAINS,\n       ( ISNULL(X.WALMART, 0) + ISNULL(X.ELEKTRA, 0)\n         + ISNULL(X.COPPEL, 0) + ISNULL(X.LIVERPOOL, 0)\n         + ISNULL(X.OTHER_CHAINS, 0) )          CADENAS,\n       ISNULL(X.FFGDL, 0)                       FFGDL,\n       ISNULL(X.FFMER, 0)                       FFMER,\n       ( ISNULL(X.FFMEX, 0) + ISNULL(X.FF, 0) ) FFMEX,\n       ISNULL(X.FFMTY, 0)                       FFMTY,\n       ISNULL(X.FFTIJ, 0)                       FFTIJ,\n       ISNULL(X.FFVER, 0)                       FFVER,\n       ( ISNULL(X.FFGDL, 0) + ISNULL(X.FFMER, 0)\n         + ISNULL(X.FFMEX, 0) + ISNULL(X.FF, 0)\n         + ISNULL(X.FFMTY, 0) + ISNULL(X.FFTIJ, 0)\n         + ISNULL(X.FFVER, 0) )                 FFS,\n       ISNULL(X.FFEMP, 0)                       FFEMP,\n       0                                        TFFGDL,\n       0                                        TFFMER,\n       0                                        TFFMEX,\n       0                                        TFFMTY,\n       0                                        TFFTIJ,\n       0                                        TFFVER,\n       0                                        TFF,\n       ISNULL(X.POS, 0)                         POS,\n       0                                        TPOS,\n       ISNULL(X.DRC, 0)                         DRC,\n       0                                        TDRC,\n       ISNULL(X.FED, 0)                         FED,\n       0                                        TFED,\n       ISNULL(X.LOGINV, 0)                      LOGINV,\n       0                                        TLOGINV,\n       PT.COST,\n       PT.AGEING,\n       X.STOCK_INVENTORY_DATE\nFROM   (SELECT DISTINCT *\n        FROM   [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT] A\n               INNER JOIN (SELECT BASE_EQUIPMENT,\n                                  Min(DI_ID) di_id\n                           FROM\n               [QA_LANDING].[INVENTORY_HANDSETS_IN_STOCK]\n                           WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n                                  AND DELETE_RECORD = 'NO'\n                           GROUP  BY BASE_EQUIPMENT) B\n                       ON A.EQUIPMENT = B.BASE_EQUIPMENT\n        WHERE  FAMILY IS NOT NULL\n        UNION\n        SELECT *\n        FROM   [QA_LANDING].[TMP_INVENTORY_STOCK_SUMMARY_REPORT] A\n               INNER JOIN (SELECT EQUIPMENT,\n                                  Min(DI_ID) di_id\n                           FROM\n               [QA_LANDING].[INVENTORY_ACCESORIES_IN_STOCK]\n               INNER JOIN\n               [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION]\n               PT\n                       ON PT.STOCK_KEEPING_UNIT = EQUIPMENT\n                           WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n                                  AND DELETE_RECORD = 'NO'\n                                  AND PT.TYPE IN( 'ACCESORIOS', 'IOT', 'ECO'\n                                                )\n                           GROUP  BY EQUIPMENT) B\n                       ON A.EQUIPMENT = B.EQUIPMENT\n        WHERE  FAMILY IS NOT NULL) X\n       INNER JOIN [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n               ON PT.STOCK_KEEPING_UNIT = X.EQUIPMENT\n       INNER JOIN [QA_LANDING].[ORGANIZATION] M\n               ON PT.ORGANIZATION_ID = M.ID\n       INNER JOIN [QA_LANDING].[ORGANIZATION] O\n               ON PT.OPERATOR_ID = O.ID\nWHERE  PT.AGEING <> 'QUITAR'\n\nINSERT INTO [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT]\n            (EQUIPMENT)\nSELECT DISTINCT EQUIPMENT\nFROM   [QA_LANDING].[INVENTORY_HANDSETS_IN_TRANSIT]\nWHERE  STOCK_INVENTORY_DATE = @stock_in_date\n       AND DELETE_RECORD = 'NO'\n       AND TOP_CHANNEL_2 <> 'QUITAR'\nUNION\nSELECT DISTINCT EQUIPMENT\nFROM   [QA_LANDING].[INVENTORY_ACCESORIES_IN_TRANSIT]\n       INNER JOIN [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n               ON PT.STOCK_KEEPING_UNIT = EQUIPMENT\nWHERE  STOCK_INVENTORY_DATE = @stock_in_date\n       AND DELETE_RECORD = 'NO'\n       AND TOP_CHANNEL <> 'QUITAR'\n       AND PT.TYPE IN( 'ACCESORIOS', 'IOT', 'ECO' )\n\nINSERT INTO [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT_TRANSIT]\nSELECT DISTINCT *\nFROM   (SELECT EQUIPMENT,\n               FAMILIY,\n               QUANTITY_AMOUNT,\n               TOP_CHANNEL_2,\n               STOCK_INVENTORY_DATE\n        FROM   [QA_LANDING].[INVENTORY_HANDSETS_IN_TRANSIT]\n        WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n               AND TOP_CHANNEL_1 IN( 'DNE', 'DRC', 'FF', 'POS',\n                                     'LOG INV', 'FED' )\n               AND DELETE_RECORD = 'NO') J\n       PIVOT(Sum(QUANTITY_AMOUNT)\n            FOR TOP_CHANNEL_2 IN([FF MTY],\n                                 [FF MER],\n                                 [FF TIJ],\n                                 [FF B2B],\n                                 [FF INV],\n                                 DRC,\n                                 [LOG INV],\n                                 [FF MEX],\n                                 FF,\n                                 DNE,\n                                 FED,\n                                 POS,\n                                 [FF GDL],\n                                 [FF VER],\n                                 WH)) K\n\nMERGE INTO [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT] AS T\nUSING (SELECT DISTINCT *\n       FROM\n[QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT_TRANSIT])\n      AS S\nON S.EQUIPMENT = T.EQUIPMENT\nWHEN MATCHED THEN\n  UPDATE SET T.EQUIPMENT = S.EQUIPMENT,\n             T.FAMILY = S.FAMILY,\n             T.STOCK_INVENTORY_DATE = S.STOCK_INVENTORY_DATE,\n             T.FFMTY = S.FFMTY,\n             T.FFMER = S.FFMER,\n             T.FFTIJ = S.FFTIJ,\n             T.FFB2B = S.FFB2B,\n             T.FFINV = S.FFINV,\n             T.DRC = S.DRC,\n             T.LOGINV = S.LOGINV,\n             T.FFMEX = S.FFMEX,\n             T.FF = S.FF,\n             T.DNE = S.DNE,\n             T.FED = S.FED,\n             T.POS = S.POS,\n             T.FFGDL = S.FFGDL,\n             T.FFVER = S.FFVER,\n             T.WH = S.WH\nWHEN NOT MATCHED THEN\n  INSERT(EQUIPMENT,\n         FAMILY,\n         STOCK_INVENTORY_DATE,\n         DNE,\n         FFGDL,\n         FFMER,\n         FFMEX,\n         FFMTY,\n         FFTIJ,\n         FFVER,\n         POS,\n         DRC,\n         FED,\n         LOGINV,\n         FF,\n         FFB2B,\n         FFINV,\n         WH )\n  VALUES(S.EQUIPMENT,\n         S.FAMILY,\n         S.STOCK_INVENTORY_DATE,\n         S.DNE,\n         S.FFGDL,\n         S.FFMER,\n         S.FFMEX,\n         S.FFMTY,\n         S.FFTIJ,\n         S.FFVER,\n         S.POS,\n         S.DRC,\n         S.FED,\n         S.LOGINV,\n         S.FF,\n         S.FFB2B,\n         S.FFINV,\n         S.WH );\n\nINSERT INTO [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT_PENDING]\nSELECT DISTINCT *\nFROM   (SELECT EQUIPMENT,\n               FAMILIY,\n               QUANTITY_AMOUNT,\n               TOP_CHANNEL,\n               STOCK_INVENTORY_DATE\n        FROM   [QA_LANDING].[INVENTORY_ACCESORIES_IN_TRANSIT]\n               INNER JOIN\n               [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n                       ON PT.STOCK_KEEPING_UNIT = EQUIPMENT\n        WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n               AND TOP_CHANNEL IN( 'FF', 'DRC', 'POS', 'WH',\n                                   'FED', 'LOG INV' )\n               AND DELETE_RECORD = 'NO'\n               AND PT.TYPE IN( 'ACCESORIOS', 'IOT', 'ECO' )) L\n       PIVOT(Sum(QUANTITY_AMOUNT)\n            FOR TOP_CHANNEL IN([FF MTY],\n                               [FF MER],\n                               [FF TIJ],\n                               [FF B2B],\n                               [FF INV],\n                               DRC,\n                               [LOG INV],\n                               [FF MEX],\n                               FF,\n                               DNE,\n                               FED,\n                               POS,\n                               [FF GDL],\n                               [FF VER],\n                               WH)) M\n\nMERGE INTO [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT] AS T ---Diego A. Vázquez\nUSING (SELECT DISTINCT *\n       FROM\n[QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT_PENDING])\n      AS S\nON S.EQUIPMENT = T.EQUIPMENT\nWHEN MATCHED THEN\n  UPDATE SET T.EQUIPMENT = S.EQUIPMENT,\n             T.FAMILY = S.FAMILY,\n             T.STOCK_INVENTORY_DATE = S.STOCK_INVENTORY_DATE,\n             T.FFMTY = S.FFMTY,\n             T.FFMER = S.FFMER,\n             T.FFTIJ = S.FFTIJ,\n             T.FFB2B = S.FFB2B,\n             T.FFINV = S.FFINV,\n             T.DRC = S.DRC,\n             T.LOGINV = S.LOGINV,\n             T.FFMEX = S.FFMEX,\n             T.FF = S.FF,\n             T.DNE = S.DNE,\n             T.FED = S.FED,\n             T.POS = S.POS,\n             T.FFGDL = S.FFGDL,\n             T.FFVER = S.FFVER,\n             T.WH = S.WH\nWHEN NOT MATCHED THEN\n  INSERT(EQUIPMENT,\n         FAMILY,\n         STOCK_INVENTORY_DATE,\n         DNE,\n         FFGDL,\n         FFMER,\n         FFMEX,\n         FFMTY,\n         FFTIJ,\n         FFVER,\n         POS,\n         DRC,\n         FED,\n         LOGINV,\n         FF,\n         FFB2B,\n         FFINV,\n         WH )\n  VALUES(S.EQUIPMENT,\n         S.FAMILY,\n         S.STOCK_INVENTORY_DATE,\n         S.DNE,\n         S.FFGDL,\n         S.FFMER,\n         S.FFMEX,\n         S.FFMTY,\n         S.FFTIJ,\n         S.FFVER,\n         S.POS,\n         S.DRC,\n         S.FED,\n         S.LOGINV,\n         S.FF,\n         S.FFB2B,\n         S.FFINV,\n         S.WH );\n\nINSERT INTO [QA_LANDING].[INVENTORY_TRANSIT_SUMMARY_REPORT]\nSELECT PT. OTHER_IDENTIFIER    SAP,\n       X.EQUIPMENT             ORACLE,\n       M.NAME                  OEM,\n       PT.DESCRIPTION          SYSTEM_DESCRIPTION,\n       PT.MODEL_NUMBER         FAMILIA,\n       PT.TYPE                 TYPE,\n       PT.COLOUR               COLOR,\n       PT.PREPAID_USAGE_STATE  ESTATUS_PREPAGO,\n       PT.POSTPAID_USAGE_STATE ESTATUS_POSPAGO,\n       PT.STATUS               STATUS,\n       O.NAME                  OPERADOR,\n       ISNULL(X.WH, 0)         WH,\n       ISNULL(X.DNE, 0)        DNE,\n       0                       WALMART,\n       0                       ELEKTRA,\n       0                       COPPEL,\n       0                       LIVERPOOL,\n       0                       OTHER_CHAINS,\n       0                       CADENAS,\n       0                       FFGDL,\n       0                       FFMER,\n       0                       FFMEX,\n       0                       FFMTY,\n       0                       FFTIJ,\n       0                       FFVER,\n       0                       FFS,\n       0                       FFEMP,\n       ISNULL(X.FFGDL, 0)      TFFGDL,\n       ISNULL(X.FFMER, 0)      TFFMER,\n       ISNULL(X.FFMEX, 0)      TFFMEX,\n       ISNULL(X.FFMTY, 0)      TFFMTY,\n       ISNULL(X.FFTIJ, 0)      TFFTIJ,\n       ISNULL(X.FFVER, 0)      TFFVER,\n       ( ISNULL(X.FFGDL, 0) + ISNULL(X.FFMER, 0)\n         + ISNULL(X.FFMEX, 0) + ISNULL(X.FFMTY, 0)\n         + ISNULL(X.FFTIJ, 0) + ISNULL(X.FFVER, 0)\n         + ISNULL(X.FF, 0) )   TFF,\n       0                       POS,\n       ISNULL(X.POS, 0)        TPOS,\n       0                       DRC,\n       ISNULL(X.DRC, 0)        TDRC,\n       0                       FED,\n       ISNULL(X.FED, 0)        TFED,\n       0                       LOGINV,\n       ISNULL(X.LOGINV, 0)     TLOGINV,\n       PT.COST                 DEVICE_COST,\n       PT.AGEING,\n       X.STOCK_INVENTORY_DATE\nFROM   (SELECT DISTINCT *\n        FROM   [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT] A\n               INNER JOIN (SELECT DISTINCT EQUIPMENT EQUIPMENT1\n                           FROM\n               [QA_LANDING].[INVENTORY_HANDSETS_IN_TRANSIT]\n                           WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n                                  AND DELETE_RECORD = 'NO') B\n                       ON A.EQUIPMENT = B.EQUIPMENT1\n        UNION\n        SELECT *\n        FROM   [QA_LANDING].[TMP_INVENTORY_TRANSIT_SUMMARY_REPORT] A\n               INNER JOIN (SELECT DISTINCT EQUIPMENT EQUIPMENT1\n                           FROM\n               [QA_LANDING].[INVENTORY_ACCESORIES_IN_TRANSIT]\n               INNER JOIN\n\t\t\t\t [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION]\n               PT\n                       ON PT.STOCK_KEEPING_UNIT = EQUIPMENT\n                           WHERE  STOCK_INVENTORY_DATE = @stock_in_date\n                                  AND DELETE_RECORD = 'NO'\n                                  AND PT.TYPE IN( 'ACCESORIOS', 'IOT', 'ECO'\n                                                ))\n                          B\n                       ON A.EQUIPMENT = B.EQUIPMENT1) X\n       INNER JOIN [QA_LANDING].[PHYSICAL_RESOURCE_SPECIFICATION] PT\n               ON PT.STOCK_KEEPING_UNIT = X.EQUIPMENT1\n       INNER JOIN [QA_LANDING].[ORGANIZATION] M\n               ON PT.ORGANIZATION_ID = M.ID\n       INNER JOIN [QA_LANDING].[ORGANIZATION] O\n               ON PT.OPERATOR_ID = O.ID\n\n--TRUNCATE TABLE [QA_LANDING].[INVENTORY_SUMMARY_REPORT] --Truncatdo temporal para borrar en pase a QA o Producción\n\nINSERT INTO [QA_LANDING].[INVENTORY_SUMMARY_REPORT]\nSELECT *\nFROM   [QA_LANDING].[INVENTORY_STOCK_SUMMARY_REPORT]\nWHERE  STOCK_INVENTORY_DATE =  @stock_in_date\n\n\nMERGE INTO [QA_LANDING].[INVENTORY_SUMMARY_REPORT] AS T --- checar AQUI\nUSING (SELECT DISTINCT *\n       FROM   [QA_LANDING].[INVENTORY_TRANSIT_SUMMARY_REPORT]\n       WHERE  STOCK_INVENTORY_DATE = @stock_in_date) AS S\nON S.ORACLE = T.ORACLE\n   AND S.STOCK_INVENTORY_DATE = T.STOCK_INVENTORY_DATE\nWHEN MATCHED THEN\n  UPDATE SET T.TFFGDL = S.TFFGDL,\n             T.TFFMER = S.TFFMER,\n             T.TFFMEX = S.TFFMEX,\n             T.TFFMTY = S.TFFMTY,\n             T.TFFTIJ = S.TFFTIJ,\n             T.TFFVER = S.TFFVER,\n             T.TFF = S.TFF,\n             T.TPOS = S.TPOS,\n             T.TDRC = S.TDRC,\n             T.TFED = S.TFED,\n             T.TLOGINV = S.TLOGINV\nWHEN NOT MATCHED THEN\n  INSERT(SAP,\n         ORACLE,\n         OEM,\n         SISTEM_DESCRIPTION,\n         FAMILY,\n         TYPE,\n         COLOUR,\n         PREPAID_STATUS,\n         POSTPAID_STATUS,\n         DEVICE_STATUS,\n         OPERATOR,\n         WH,\n         DNE,\n         WALMART,\n         ELEKTRA,\n         COPPEL,\n         LIVERPOOL,\n         OTHER_CHAINS,\n         CHAINS,\n         FFGDL,\n         FFMER,\n         FFMEX,\n         FFMTY,\n         FFTIJ,\n         FFVER,\n         FFS,\n         FFEMP,\n         TFFGDL,\n         TFFMER,\n         TFFMEX,\n         TFFMTY,\n         TFFTIJ,\n         TFFVER,\n         TFF,\n         POS,\n         TPOS,\n         DRC,\n         TDRC,\n         FED,\n         TFED,\n         LOGINV,\n         TLOGINV,\n         DEVICE_COST,\n         AGEING,\n         STOCK_INVENTORY_DATE )\n  VALUES(S.SAP,\n         S.ORACLE,\n         S.OEM,\n         S.SISTEM_DESCRIPTION,\n         S.FAMILY,\n         S.TYPE,\n         S.COLOUR,\n         S.PREPAID_STATUS,\n         S.POSTPAID_STATUS,\n         S.DEVICE_STATUS,\n         S.OPERATOR,\n         S.WH,\n         S.DNE,\n         S.WALMART,\n         S.ELEKTRA,\n         S.COPPEL,\n         S.LIVERPOOL,\n         S.OTHER_CHAINS,\n         S.CHAINS,\n         S.FFGDL,\n         S.FFMER,\n         S.FFMEX,\n         S.FFMTY,\n         S.FFTIJ,\n         S.FFVER,\n         S.FFS,\n         S.FFEMP,\n         S.TFFGDL,\n         S.TFFMER,\n         S.TFFMEX,\n         S.TFFMTY,\n         S.TFFTIJ,\n         S.TFFVER,\n         S.TFF,\n         S.POS,\n         S.TPOS,\n         S.DRC,\n         S.TDRC,\n         S.FED,\n         S.TFED,\n         S.LOGINV,\n         S.TLOGINV,\n         S.DEVICE_COST,\n         S.AGEING,\n         S.STOCK_INVENTORY_DATE );\n\nUPDATE [QA_LANDING].[INVENTORY_STOCK_SUMMARY_REPORT_STATUS]\nSET    IS_INVENTORY_REPORT_GENERATED = 'true'\nWHERE  STOCK_INVENTORY_DATE = @stock_in_date\n\nSET @i=@i + 1\nEND -- AQUI TERMINA EL WHILE\nSET @result='success'\n\nSELECT @result;\nEND TRY\n\n  BEGIN CATCH\n      SET @result='failure'\n      SET @code = (SELECT ERROR_NUMBER())\n      SET @state = (SELECT ERROR_STATE())\n      SET @message = (SELECT ERROR_MESSAGE())\n      SET @stacktracetxt = 0\n\n      TRUNCATE TABLE QA_LANDING.TEMP_ERROR_LOG\n\n      INSERT INTO QA_LANDING.TEMP_ERROR_LOG\n                  (CODE,\n                   STATE,\n                   MESSAGE,\n                   STACKTRACETXT,\n                   STATUS,\n                   TASKNAME)\n      -- VALUES (@code, @state, @message, @stackTraceTxt, @result,'INVENTORY_SUMMARY_REPORT')\n      (SELECT @code,\n              @state,\n              @message,\n              @stacktracetxt,\n              @result,\n              'INVENTORY_SUMMARY_REPORT')\n\n      INSERT INTO QA_LANDING.ERROR_LOG\n                  (CODE,\n                   STATE,\n                   MESSAGE,\n                   STACKTRACETXT,\n                   STATUS,\n                   TASKNAME,\n                   CREATED_DATE)\n      (SELECT CODE,\n              STATE,\n              MESSAGE,\n              STACKTRACETXT,\n              STATUS,\n              TASKNAME,\n              [dbo].[ufn_GetLocalDate] (getdate())\n       FROM   QA_LANDING.TEMP_ERROR_LOG)\n  END CATCH\n\n    SELECT @result; \n  UPDATE dbo.gen_Logs SET FIN = [dbo].[ufn_GetLocalDate](GETDATE()) WHERE LogID = @logID\n\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "Landing",
				"poolName": "Landing"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}